apiVersion: v1
kind: Secret
metadata:
  name: vault-token-secret
type: Opaque
data:
  # {{ with secret "kv/data/VAULT" }}
  VAULT_ADDRESS: {{ .Data.data.VAULT_ADDR_BASE64ENCODED }}
  VAULT_TOKEN: {{ .Data.data.VAULT_TOKEN_BASE64ENCODED }}
  # {{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextjs-ui
  labels:
    app: nextjs-ui
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nextjs-ui
  template:
    metadata:
      labels:
        app: nextjs-ui
    spec:
      imagePullSecrets:
        - name: ecr-docker-login-token-from-action
      containers:
        - name: nextjs-ui
          image: id-here.dkr.ecr.us-east-2.amazonaws.com/javascript/nextjs-ui:v1.0.1-e4c2d0bb
          imagePullPolicy: Always
          env:
            - name: PRODUCTION
              value: 'true'
            - name: VAULT_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: vault-token-secret
                  key: VAULT_ADDRESS
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-token-secret
                  key: VAULT_TOKEN
          ports:
            - name: nextjs-ui-port
              containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: nextjs-ui-clusterip
spec:
  type: ClusterIP
  ports:
    - targetPort: 3000
      name: nextjs-ui-port
      port: 80
  selector:
    app: nextjs-ui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nextjs-ui-ingress
  annotations:
    kubernetes.io/ingress.class: 'nginx'
spec:
  defaultBackend:
    service:
      name: nextjs-ui-clusterip
      port:
        number: 80
  tls:
    - hosts:
        - nextjs.ferozfaiz.com
      secretName: ferozfaiz-com-cloudflare-tls
  rules:
    - host: nextjs.ferozfaiz.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nextjs-ui-clusterip
                port:
                  number: 80